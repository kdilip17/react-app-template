type Query {
  config: Config @cacheControl(scope: PUBLIC, maxAge: SHORT)
  getSellerList(search: String, pagination: String): SellerResponse @cacheControl(scope: PUBLIC, maxAge: SHORT)
  getSellerDetailsById(SellerId: String) : CreateSellerRequestResponse @cacheControl(scope: PUBLIC)
}

type Config {
  schema: Boolean
  title: String
  anonymous: Boolean
  search: Boolean
  moderation: Boolean
}

type Mutation {
  createSellerOnMarketplace(seller: SellerInput): Seller
  createSellerRequests(seller: SellerInput): CreateSellerRequestResponse
}

type SellerResponse {
  list : [Seller]
  count: Int
}

type CreateSellerRequestResponse {
    Id: String
    message: String
}

input SellerInput {
  SellerId: String!
  Name: String!
  Email: String!
  Description: String!
  ExchangeReturnPolicy: String!
  DeliveryPolicy: String!
  UseHybridPaymentOptions: Boolean!
  UserName: String!
  Password: String!
  SecutityPrivacyPolicy: String!
  CNPJ: String!
  CSCIdentification: String!
  ArchiveId: Int!
  UrlLogo: String!
  ProductCommissionPercentage: Float!
  FreightCommissionPercentage: Float!
  FulfillmentEndpoint: String!
  CatalogSystemEndpoint: String!
  IsActive: Boolean!
  Invited: Boolean
  noOfInvites: Int
  FulfillmentSellerId: Int!
  SellerType: Int!
  IsBetterScope: Boolean!
  creationDate: String
}

type Seller {
  id: String
  SellerId: String
  Name: String
  Email: String
  Description: String
  ExchangeReturnPolicy: String
  DeliveryPolicy: String
  UseHybridPaymentOptions: Boolean
  UserName: String
  Password: String
  SecutityPrivacyPolicy: String
  CNPJ: String
  CSCIdentification: String
  ArchiveId: String
  UrlLogo: String
  ProductCommissionPercentage: Float
  FreightCommissionPercentage: Float
  FulfillmentEndpoint: String
  CatalogSystemEndpoint: String
  IsActive: Boolean
  FulfillmentSellerId: String
  SellerType: Int
  IsBetterScope: Boolean
  creationDate: String
}
